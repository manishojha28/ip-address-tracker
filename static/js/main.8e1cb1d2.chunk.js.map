{"version":3,"sources":["images/icon-location.svg","MapView.js","Main.js","App.js","index.js"],"names":["MapView","latLong","DefaultIcon","Leaflet","icon","iconUrl","iconSize","popupAnchor","CenterView","center","useMap","setView","position","Object","values","MapContainer","zoom","style","height","width","zIndex","pointerEvents","scrollWheelZoom","zoomControl","zoomAnimation","touchZoom","TileLayer","url","Marker","Popup","Main","useState","lat","lng","setLatLong","ipAddress","setIpAddress","location","setLocation","isp","setIsp","timezone","setTimezone","ip","setIp","useEffect","fetch","then","res","ok","Error","json","data","l1","l2","undefined","region","catch","className","id","type","placeholder","onChange","e","target","value","handleChange","IconButton","onClick","App","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+VAAe,G,MAAA,IAA0B,2CC6C1BA,EAvCC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAETC,EAAcC,IAAQC,KAAK,CAC7BC,QAASD,EACTE,SAAU,CAAC,GAAI,IACfC,YAAa,CAAC,GAAI,MAGhBC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAGlB,OAFYC,cACRC,QAAQF,GACL,MAGLG,EAAWC,OAAOC,OAAOb,GAE/B,OACI,eAACc,EAAA,EAAD,CACIN,OAAQG,EACRI,KAAM,GACNC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAQC,OAAQ,IAAKC,cAAe,QACpEC,iBAAiB,EACjBC,aAAa,EACbC,eAAe,EACfC,UAAW,SAPf,UASQ,cAACjB,EAAD,CAAYC,OAAQG,IACpB,cAACc,EAAA,EAAD,CACIC,IAAI,uDAER,cAACC,EAAA,EAAD,CAAQhB,SAAUA,EAAUR,KAAMF,EAAlC,SACI,eAAC2B,EAAA,EAAD,mCACyB,uBADzB,iCCoDLC,EAnFF,WAAO,IAAD,EAEeC,mBAAS,CAACC,IAAK,SAAUC,KAAM,aAF9C,mBAERhC,EAFQ,KAECiC,EAFD,OAGmBH,mBAAS,IAH5B,mBAGRI,EAHQ,KAGGC,EAHH,OAIiBL,mBAAS,IAJ1B,mBAIRM,EAJQ,KAIEC,EAJF,OAKOP,mBAAS,IALhB,mBAKRQ,EALQ,KAKHC,EALG,OAMiBT,mBAAS,IAN1B,mBAMRU,EANQ,KAMEC,EANF,OAOKX,mBAAS,IAPd,mBAORY,EAPQ,KAOJC,EAPI,KAUfC,qBAAU,WACN,IAAMlB,EAAG,yFAAqFQ,GAC9FW,MAAMnB,GACDoB,MAAK,SAAAC,GACF,GAAGA,EAAIC,GACH,OAAOD,EAEN,MAAM,IAAIE,MAAM,gBAExBH,MAAK,SAACC,GAAD,OAASA,EAAIG,UAClBJ,MAAK,SAACK,GACH,IAAMC,EAAKD,EAAKf,SAASL,IACnBsB,EAAKF,EAAKf,SAASJ,SAEfsB,IAAPF,QAA2BE,IAAPD,GACnBpB,EAFQ,CAACF,IAAKqB,EAAIpB,IAAKqB,IAI3BlB,EAAagB,EAAKT,IAClBL,EAAYc,EAAKf,SAASmB,QAC1BhB,EAAOY,EAAKb,KACZG,EAAY,OAAD,OAAQU,EAAKf,SAASI,cAEpCgB,UACN,CAACtB,IAUJ,OACI,sBAAKuB,UAAU,iBAAf,UACI,sBAAKA,UAAU,YAAf,UACI,oBAAIC,GAAG,MAAP,gCACA,sBAAKD,UAAU,mBAAf,UACI,uBACIC,GAAG,WACHC,KAAK,OACLC,YAAY,sCACZC,SAAU,SAAAC,GAAC,OAbV,SAACA,GAClBnB,EAAMmB,EAAEC,OAAOC,OAYgBC,CAAaH,MAEhC,cAACI,EAAA,EAAD,CAAYR,GAAG,MAAMS,QAnBjB,WAChBhC,EAAaO,IAkBD,SACI,cAAC,IAAD,YAIZ,sBAAKe,UAAU,YAAf,UACI,sBAAKA,UAAU,OAAf,UACI,mBAAGA,UAAU,QAAb,wBACA,mBAAGA,UAAU,QAAb,SAAsBvB,OAE1B,sBAAKuB,UAAU,OAAf,UACI,mBAAGA,UAAU,QAAb,sBACA,mBAAGA,UAAU,QAAb,SAAsBrB,OAE1B,sBAAKqB,UAAU,OAAf,UACI,mBAAGA,UAAU,QAAb,sBACA,mBAAGA,UAAU,QAAb,SAAsBjB,OAE1B,sBAAKiB,UAAU,OAAf,UACI,mBAAGA,UAAU,QAAb,iBACA,mBAAGA,UAAU,QAAb,SAAsBnB,UAG9B,cAAC,EAAD,CAAStC,QAASA,QCvEfoE,MARf,WACE,OACE,cAAC,IAAMC,SAAP,UACE,cAAC,EAAD,OCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8e1cb1d2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-location.7e6459d2.svg\";","import React from 'react'\r\nimport Leaflet from 'leaflet'\r\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport icon from './images/icon-location.svg';\r\n\r\nconst MapView = ({ latLong }) => {\r\n\r\n    const DefaultIcon = Leaflet.icon({\r\n        iconUrl: icon,\r\n        iconSize: [27, 40],\r\n        popupAnchor: [0, -46]\r\n    });\r\n\r\n    const CenterView = ({ center }) => {\r\n        const map = useMap()\r\n        map.setView(center)\r\n        return null\r\n    }\r\n\r\n    const position = Object.values(latLong)\r\n\r\n    return (\r\n        <MapContainer \r\n            center={position}\r\n            zoom={11}\r\n            style={{ height: \"70vh\", width: \"100%\", zIndex: \"1\", pointerEvents: \"auto\" }}\r\n            scrollWheelZoom={true}\r\n            zoomControl={false}\r\n            zoomAnimation={true}\r\n            touchZoom={\"center\"}\r\n            >\r\n                <CenterView center={position} />\r\n                <TileLayer\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n                <Marker position={position} icon={DefaultIcon}>\r\n                    <Popup>\r\n                        A pretty CSS3 popup. <br /> Easily customizable.\r\n                    </Popup>\r\n                </Marker>\r\n        </MapContainer>\r\n    )\r\n}\r\n\r\nexport default MapView","import React, { useState, useEffect } from 'react'\r\nimport { IconButton } from '@material-ui/core';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport './Main.css'\r\nimport MapView from './MapView';\r\n\r\nconst Main = () => {\r\n\r\n    const [latLong, setLatLong] = useState({lat: 37.40599, lng: -122.078514})\r\n    const [ipAddress, setIpAddress] = useState(\"\")\r\n    const [location, setLocation] = useState(\"\")\r\n    const [isp, setIsp] = useState(\"\")\r\n    const [timezone, setTimezone] = useState(\"\")\r\n    const [ip, setIp] = useState(\"\")\r\n\r\n\r\n    useEffect(() => {\r\n        const url = `https://geo.ipify.org/api/v1?apiKey=at_2vTG07BaiN6spBlwtk2x6Y374lJd2&ipAddress=${ipAddress}`\r\n        fetch(url)\r\n            .then(res => {\r\n                if(res.ok) {\r\n                    return res\r\n                }\r\n                else throw new Error(\"Not Found\")\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                const l1 = data.location.lat\r\n                const l2 = data.location.lng\r\n                const obj = {lat: l1, lng: l2}\r\n                if(l1 !== undefined && l2 !== undefined){\r\n                    setLatLong(obj)\r\n                }\r\n                setIpAddress(data.ip)\r\n                setLocation(data.location.region)\r\n                setIsp(data.isp)\r\n                setTimezone(`UTC ${data.location.timezone}`)\r\n            })\r\n            .catch()\r\n    }, [ipAddress])\r\n\r\n    const handleClick = () => {\r\n        setIpAddress(ip)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setIp(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"main_container\">\r\n            <div className=\"upper_box\">\r\n                <h2 id=\"top\">IP Address Tracker</h2>\r\n                <div className=\"search_container\">\r\n                    <input\r\n                        id=\"ip_input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Search for any IP address or domain\"\r\n                        onChange={e => handleChange(e)}\r\n                        ></input>\r\n                    <IconButton id=\"btn\" onClick={handleClick}>\r\n                        <ArrowForwardIosIcon />\r\n                    </IconButton>\r\n                </div> \r\n            </div>\r\n            <div className=\"data_card\">\r\n                <div className=\"data\">\r\n                    <p className=\"small\">IP ADDRESS</p>\r\n                    <p className=\"large\">{ipAddress}</p>\r\n                </div>\r\n                <div className=\"data\">\r\n                    <p className=\"small\">LOCATION</p>\r\n                    <p className=\"large\">{location}</p>\r\n                </div>\r\n                <div className=\"data\">\r\n                    <p className=\"small\">TIMEZONE</p>\r\n                    <p className=\"large\">{timezone}</p>\r\n                </div>\r\n                <div className=\"data\">\r\n                    <p className=\"small\">ISP</p>\r\n                    <p className=\"large\">{isp}</p>\r\n                </div>\r\n            </div>\r\n            <MapView latLong={latLong}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Main","import React from 'react';\nimport './App.css';\nimport Main from './Main';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Main />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}